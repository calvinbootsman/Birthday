@page "/game3Client"
@using Microsoft.AspNetCore.SignalR.Client
@using System.Timers

@implements IAsyncDisposable
@inject NavigationManager Navigation
@inject Blazored.LocalStorage.ILocalStorageService localStorage

@if (nextGame == false)
{
    @if (answerer)
    {
        <input type="text" @bind="textAnswer" />
        <button class="btn btn-primary" @onclick="SendTextAnswer">send</button>
        <p style="color:#353535;">Try to guess the correct answer. The answer is capital insensitive. For every wrong answer theres a penalty of 5 minutes.'</p>
    }
    else
    {
        <h1>@cShow</h1>
    }
}
else {
    <button @onclick="NextPage" class="btn btn-primary">Next page</button>
}
@code {
    private HubConnection? hubConnection;
    private string thisUser = "";
    private bool answerer = false;
    private char cShow = ' ';
    private string textAnswer = "";
    private bool nextGame = false;
    protected override async Task OnInitializedAsync()
    {
        thisUser = await localStorage.GetItemAsStringAsync("User");
        hubConnection = new HubConnectionBuilder()
             .WithUrl(Navigation.ToAbsoluteUri("/logincontroller"))
             .Build();
        hubConnection.On<string>("SecretAssignRoleMessage", (user) =>
        {
            if (thisUser == user)
            {
                answerer = true;
                StateHasChanged();
            }
        });
        hubConnection.On<string, char>("NextCharacterMessage", (user, c) =>
        {
            if (answerer == false)
            {
                if (user == thisUser)
                {
                    cShow = c;
                    StateHasChanged();
                }
                else {
                    cShow = ' ';
                    StateHasChanged();
                }
            }
        });
        hubConnection.On<string>("NextPageMessage", test =>
        {
            Navigation.NavigateTo("/game4Client");
        });
        await hubConnection.StartAsync();
    }

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
    private async Task SendTextAnswer()
    {
        if (hubConnection is not null)
        {
            await hubConnection.SendAsync("SendAnswer", textAnswer);
        }
    }
    private void NextPage()
    {
        Navigation.NavigateTo("/game4Client");
    }
}
