@page "/game2Client"
@using Microsoft.AspNetCore.SignalR.Client
@using System.Timers

@implements IAsyncDisposable
@inject NavigationManager Navigation
@inject Blazored.LocalStorage.ILocalStorageService localStorage

@if (nextGame == false) {
    @if (thisIndex >= 1 && thisIndex <= 6)
    {
        <img src="@imageSrc" alt="" style="display:block; width:100%" />
    }

        <input type="text" @bind="textAnswer" />
        <button class="btn btn-primary" @onclick="SendTextAnswer">send</button>
        <p style="color:#353535;">Try to guess the correct answer. The answer is capital insensitive. For every wrong answer theres a penalty of 5 minutes.'</p>
    
}
@if (nextGame)
{
    <button @onclick="NextPage" class="btn btn-primary">Next page</button>
}
@code {
    private HubConnection? hubConnection;
    private string thisUser = "";
    private int thisIndex = -1;
    private string imageSrc = "";
    private string textAnswer = "";
    private bool nextGame = false;

    protected override async Task OnInitializedAsync()
    {     
        thisUser = await localStorage.GetItemAsStringAsync("User");
        hubConnection = new HubConnectionBuilder()
             .WithUrl(Navigation.ToAbsoluteUri("/logincontroller"))
             .Build();
        hubConnection.On<string, int>("PictureAssignRoleMessage", (user, index) =>
        {
            if (thisUser == user) {
                thisIndex = index; 
                StateHasChanged();
            }
        });
        hubConnection.On<string, int>("NextPictureMessage", (theme, pictureIndex) =>
        {
            if (thisIndex >= 0 && thisIndex < 6 ){
                imageSrc = $"/images/{theme}/{theme}-{pictureIndex}-{thisIndex}.png";
                StateHasChanged();
            }
        });
        hubConnection.On<string>("NextPageMessage", test =>
        {
            Navigation.NavigateTo("/game3Client");
            nextGame = true;
            StateHasChanged();

        });
        await hubConnection.StartAsync();
    }

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
    private async Task SendTextAnswer()
    {
        if (hubConnection is not null)
        {
            await hubConnection.SendAsync("SendAnswer", textAnswer);
        }
    }
    private void NextPage()
    {
        Navigation.NavigateTo("/game3Client");
    }
}
