@page "/startscreen"
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Navigation
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@implements IAsyncDisposable

<h3>Help Stalvin!</h3>
@foreach (string s in Users)
{
    <p>@s</p>
}

<button @onclick="TVClientPage">Start!</button>

@code {
    private HubConnection? hubConnection;
    private List<string> Users = new List<string>();

    protected override async Task OnInitializedAsync()
    {        
        var keys = await localStorage.KeysAsync();

        foreach (string s in keys) {
            var value = await localStorage.GetItemAsStringAsync(s);
            if (value == "added")
                Users.Add(s);
        }
        hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/logincontroller"))
            .Build();
        hubConnection.On<string>("ReceiveMessage", async(user) =>
       {
           string test = await localStorage.GetItemAsStringAsync(user);

           if (string.IsNullOrEmpty(test)) 
           {
               var encodedMsg = $"{user}";
               Users.Add(encodedMsg);
               await localStorage.SetItemAsStringAsync(user, "added");
               await hubConnection.SendAsync("IsNameAdded", user, true);
               StateHasChanged();
           }
           else {
               if (hubConnection is not null)
               {
                   await hubConnection.SendAsync("IsNameAdded", user, false);
               }
           }
       });
        await hubConnection.StartAsync();

    }
    public bool IsConnected =>
       hubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }

    public async Task TVClientPage() {
        var currenTime = DateTimeOffset.Now;

        await localStorage.SetItemAsStringAsync("Start time", currenTime.ToUnixTimeSeconds().ToString());
        await localStorage.SetItemAsStringAsync("Current game", "game 1");
        await localStorage.SetItemAsStringAsync("gameDuration", "3600");
        Navigation.NavigateTo("/game1TV");
    }
}
